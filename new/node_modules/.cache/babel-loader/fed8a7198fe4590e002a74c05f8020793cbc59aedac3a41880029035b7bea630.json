{"ast":null,"code":"var _jsxFileName = \"/Users/saket/Documents/Rent@I/HackIIIT-24/new/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  navigateTo\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const {\n    setLoggedIn\n  } = useAuth(); // Destructure setLoggedIn from the context\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/login', {\n        email,\n        password\n      });\n      if (response && response.data) {\n        // Process the successful response here\n        setLoggedIn(true);\n        navigateTo('dashboard');\n        navigateTo('dashboard');\n      } else {\n        // Handle the case where response or response.data is not as expected\n        setError('Unexpected response format from server.');\n      }\n    } catch (error) {\n      // Handle any errors that occur during the request\n      setError(error.response && error.response.data ? error.response.data.message : 'Login request failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigateTo('signup'),\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"hcd5Ah0XdoBnNb8sCCxTT/rkVLk=\", true);\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginPage","navigateTo","_s","email","setEmail","password","setPassword","error","setError","setLoggedIn","useAuth","handleLogin","e","preventDefault","response","post","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/saket/Documents/Rent@I/HackIIIT-24/new/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst LoginPage = ({ navigateTo }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const { setLoggedIn } = useAuth(); // Destructure setLoggedIn from the context\n\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/login', { email, password });\n      if (response && response.data) {\n        // Process the successful response here\n        setLoggedIn(true);\n        navigateTo('dashboard');\n        navigateTo('dashboard');\n      } else {\n        // Handle the case where response or response.data is not as expected\n        setError('Unexpected response format from server.');\n      }\n    } catch (error) {\n      // Handle any errors that occur during the request\n      setError(error.response && error.response.data ? error.response.data.message : 'Login request failed.');\n    }\n  };\n  \n\n  return (\n    <div className=\"login-page\">\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      {error && <div className=\"error\">{error}</div>}\n      <p>\n        Don't have an account?{' '}\n        <span onClick={() => navigateTo('signup')}>Sign up</span>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}